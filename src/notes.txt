const { Auth } = require('../utils/common');

async function signIn(data) {
    try {
        const user = await userRepository.getUserByEmail(data.email);
        if(!user)
            throw new AppError('User for this email id not found', StatusCodes.NOT_FOUND);
        const passwordMatch = Auth.checkPassword(data.password, user.password);
        if(!passwordMatch)
            throw new AppError('Invalid Password', StatusCodes.BAD_REQUEST);
        const jwt = Auth.createToken({id: user.id, email: user.email});
        return jwt;
    } catch (error) {
        console.log(error);
        if(error instanceof AppError)
            throw error;
        throw new AppError('Something went wrong', StatusCodes.INTERNAL_SERVER_ERROR);
    }
}




async function signIn(req, res) {
    try {
        console.log(req.body);
        const user = await UserService.signIn({
            email: req.body.email,
            password: req.body.password
        });
        SuccessResponse.data = user;
        return res                                          
                .status(StatusCodes.CREATED)                
                .json(SuccessResponse);
                                     
    } catch (error) { 
        ErrorResponse.error = error;                                       
        return res                                          
                .status(error.statusCode)  
                .json(ErrorResponse);                      
    
    }
}